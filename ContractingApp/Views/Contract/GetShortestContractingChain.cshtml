@model ContractingApp.ViewModel.ContractorRelationViewModel

@{
    ViewData["Title"] = "GetShortestContractingChain";
}

<h3>Shortest Contracting Chain</h3>


<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="GetShortestContractingChain">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Contractor1Id" class="control-label">Contractor 1 </label>
                <select asp-for="Contractor1Id"
                        asp-items="@(new SelectList(Model.ContractorList,"Id","Name"))" class="form-control" id="contractor1">
                    <option>Please select one</option>
                </select>
                <span asp-validation-for="Contractor1Id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Contractor2Id" class="control-label">Contractor 2 </label>
                <select asp-for="Contractor2Id"
                        asp-items="@(new SelectList(Model.ContractorList,"Id","Name"))" class="form-control"  id="contractor2">
                    <option>Please select one</option>
                </select>
                <span asp-validation-for="Contractor2Id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Search" class="btn btn-primary" id="submitbutton" />
            </div>
            @if (Model.IsShortestChainCalculated)
            {
                <h5>@Model.ShortestContractingChain</h5>
            }
        </form>
    </div>
</div>

<div>
    <a asp-controller="Contractor" asp-action="Index" id="backtolist">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
